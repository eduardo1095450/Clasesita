<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>